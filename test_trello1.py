# Generated by Selenium IDE
import pytest
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities

class TestTrello():
  def setup_method(self, method):
    self.driver = webdriver.Firefox()
    self.vars = {}
  
  def teardown_method(self, method):
    self.driver.quit()
  
  def test_trello(self):
    # Test name: Trello
    # Step # | name | target | value | comment
    # 1 | open | / |  | 
    self.driver.get("https://trello.com/")
    # 2 | setWindowSize | 950x691 |  | 
    self.driver.set_window_size(950, 691)
    # 3 | click | css=.navbar |  | 
    self.driver.find_element(By.CSS_SELECTOR, ".navbar").click()
    # 4 | click | linkText=Log In |  | 
    self.driver.find_element(By.LINK_TEXT, "Log In").click()
    # 5 | click | id=user |  | 
    self.driver.find_element(By.ID, "user").click()
    # 6 | type | id=user | moazam.rana@ucp.edu.pk | 
    self.driver.find_element(By.ID, "user").send_keys("moazam.rana@ucp.edu.pk")
    # 7 | click | id=password |  | 
    self.driver.find_element(By.ID, "password").click()
    # 8 | type | id=password | return0; | 
    self.driver.find_element(By.ID, "password").send_keys("return0;")
    # 9 | click | id=login |  | 
    self.driver.find_element(By.ID, "login").click()
    # 10 | click | css=.mod-add |  | 
    self.driver.find_element(By.CSS_SELECTOR, ".mod-add").click()
    # 11 | click | css=.subtle-input |  | 
    self.driver.find_element(By.CSS_SELECTOR, ".subtle-input").click()
    # 12 | type | css=.subtle-input | trello | 
    self.driver.find_element(By.CSS_SELECTOR, ".subtle-input").send_keys("trello")
    # 13 | click | css=.button > span:nth-child(2) |  | 
    self.driver.find_element(By.CSS_SELECTOR, ".button > span:nth-child(2)").click()
    # 14 | click | css=.icon-close |  | 
    self.driver.find_element(By.CSS_SELECTOR, ".icon-close").click()
    # 15 | click | css=.\_24AWINHReYjNBf |  | 
    self.driver.find_element(By.CSS_SELECTOR, ".\\_24AWINHReYjNBf").click()
    # 16 | mouseOver | css=.\_24AWINHReYjNBf |  | 
    element = self.driver.find_element(By.CSS_SELECTOR, ".\\_24AWINHReYjNBf")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    # 17 | mouseOut | css=.\_24AWINHReYjNBf |  | 
    element = self.driver.find_element(By.CSS_SELECTOR, "body")
    actions = ActionChains(self.driver)
    actions.move_to_element(element, 0, 0).perform()
    # 18 | click | css=li:nth-child(8) .\_1uK2vQ_aMRS2NU |  | 
    self.driver.find_element(By.CSS_SELECTOR, "li:nth-child(8) .\\_1uK2vQ_aMRS2NU").click()
  
